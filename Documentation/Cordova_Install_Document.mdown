# Installing Cordova on Mac

This document will provide detailed steps on how to install Cordova on OS X and how to get a basic Hello World application up and running on both emulators and devices for Android and iOS.

Whenever you see a "Check", "Run", or terminal operation, that means to run the command that follows in a terminal window.  The right arrow (->) that proceeds is the resulting output you should get after running the command.

**Known Issues:**
- Using a package manager such as Homebrew
	- I have attempted to use Homebrew and there were issues with the paths Homebrew installed these packages to  
- Using Node.js version 5
	- When I was installing node I figured the latest version would be the best version, but there are some known issues with using node 5 instead of node 4

## Install Cordova
1. Install Node.js (version 4.2.2)
	- Install: [link](https://nodejs.org/en/download/)
	- Check: `node --version` -> v4.2.2
	- Check: `npm --nersion` -> 2.14.7
2. Install git (version 2.4.9)
	- Install: [link](http://git-scm.com/downloads)
	- Check: `git --version` -> git version 2.4.9 (Apple Git-60)
3. Install Command Line Tools for OS X
	- Check: `gcc --version` -> ...Apple LLVM version 7.0.0...
	- Check: `xcode-select -p` -> /Applications/Xcode.app/Contents/Developer
	- **Note:** If you already have Xcode installed the Command Line Tools should also be installed.  If not, when you run `git --version` from the previous step you should get a pop-up saying that you need to install the "Command Line Tools".  If that pop-up appears, click on the Download button.
4. Install Cordova
	- Run `sudo npm install -g cordova`
	- Check: `cordova --version` -> 5.3.3
5. Create Hello World Application
	- `cd` into a directory you want to create the application.  For instance I use `~/Programming/Cordova/`
	- Run `cordova create hello com.example.hello HelloWorld`
		* Check: `cd hello`
	- **Notes**
		- `hello` is the name of the directory that Cordova will create to store the source code for the application in.  You can rename this to whatever you want (helloWorld, hello_world, etc.)
		- `com.example.hello` is a reverse domain-style identifier.  This uniquely identifies the application with you.  For instance if I were to create an application called `hello` and someone else were to create an application called `hello` there would be no distinguishing between the two.  The reverse domain-style identifier allows you to specify that it is yours.  A good example as a CU student would be to use your identikey.  Instead of `com.example.hello` one could use `edu.cu_identikey.colorado`. For this guide you can just use the provided reverse domain-style identifier as this application is just meant to be used for demonstration purposes.
		- `HelloWorld` is the name that will appear on the application.  You can change this later as well in the `config.xml` file.

## Run Cordova Application on iOS and Android Emulators
1. iOS
	- Install Xcode from the App Store ([link](https://itunes.apple.com/us/app/xcode/id497799835?mt=12))
		- This download is between 2GB and 3GB so it will take some time
	- Run `sudo npm install -g ios-sim`.  This *should* be a one time thing.  I've done a few Hello World type apps and only had to run that command on the very first app.
	- `cd` into the directory your Hello World application from the previous steps was created
		- **Note:** The following commands must be run inside the application directory.
	- Run `cordova platform add ios`
		- This tells the application that it can be run on an iOS emulator or device.
		- You can check this by looking in `.../cordova_project_name/platforms/os_name`
	- Run `cordova build`
	- Run `cordova emulate ios`
2. Android
	- Install Apple's Java Support
		- Install: [link](https://support.apple.com/kb/DL1572?viewlocale=en_US&locale=en_US)
	- Install JDK (version 1.8)
		- Install: [link](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)
		- Check: `java -version`
	- Install Android Studio
		- Install: [link](http://developer.android.com/index.html)
			- The link also has a guide you can follow to properly install Android Studio
		- Create a new application. The application details do not matter so click through until you have full access to Android Studio.
		- Install Tools:
			- Tools -> Android -> SDK Manager
				- Select All
				- Click Apply
		- Install Emulator:
			- Tools -> Android -> AVD Manager -> Nexus 4 -> Froyo -> Finish
	- `cd` into the directory your Hello World application from the previous steps was created
	- Run `cordova platform add android`
	- Run `cordova build`
	- Run `cordova emulate android`
		- If you only created one emulator within Android Studio it will default to that one.  If there are multiple it will default to the latest one you created.
		- I have yet to figure out how to specify the emulator you wish to run on.  There is an optional `--target` tag you can add, but you have to specify the emulator name and I have yet to find where to get the name.

## Run Cordova Application on iOS and Android Devices
1. iOS
	- Connect iOS device to computer via USB cable
	- `cd` into the directory your Hello World application from the previous steps was created
	- Run `cordova build`
	- Run `cordova run --device`
		- I have the Apple Developer subscription so I can deploy to iOS devices from Xcode.  I am not sure if this is needed for Cordova or not, but I will update this once I have further information.
		- Type `q` -> <ENTER> -> `y` -> <ENTER> to successfully quit the application on the device and in the terminal
2. Android
	- Test


